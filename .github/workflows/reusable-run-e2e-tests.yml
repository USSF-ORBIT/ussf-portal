name: Build & run E2E tests

on:
  # make the workflow reusable
  workflow_call:
permissions:
  id-token: write
  contents: read
jobs:
  # builds docker images once and saves them as artifacts for parallel e2e job to use
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone portal client  # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
        with:
          repository: USSF-ORBIT/ussf-portal-client
          path: ./ussf-portal-client
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout portal client ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./ussf-portal-client
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      - name: Clone cms  # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
        with:
          repository: USSF-ORBIT/ussf-portal-cms
          path: ./ussf-portal-cms
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout cms ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./ussf-portal-cms
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v2
        with:
          aws-access-key-id: ${{ secrets.GHA_ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GHA_ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.GHA_ECR_ROLE_ASSUMPTION }}
          role-skip-session-tagging: true
          role-duration-seconds: "3600"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@2f9f10ea3fa2eed41ac443fee8bfbd059af2d0a4 # v1

      - uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2
        id: buildx
        with:
          install: true

      # - name: Build Keystone to e2e Stage
      #   uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
      #   with:
      #     context: ./ussf-portal-cms
      #     tags: keystone-cms:e2e
      #     cache-to: type=local,mode=max,dest=/tmp/keystone-cms,tag=e2e
      #     target: e2e
      #     cache-from: |
      #       ${{ steps.login-ecr.outputs.registry }}/docker-build-cache:keystone-builder
      #       ${{ steps.login-ecr.outputs.registry }}/docker-build-cache:keystone-e2e

      - name: Build Portal to e2e State
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
        with:
          context: ./ussf-portal-client
          tags: portal-client:e2e
          cache-to: type=local,mode=max,dest=/tmp/portal-client,tag=e2e
          target: e2e
          cache-from: |
            ${{ steps.login-ecr.outputs.registry }}/docker-build-cache:portal-client-builder
            ${{ steps.login-ecr.outputs.registry }}/docker-build-cache:portal-client-e2e

      # - name: Upload keystone-cms cache dir
      #   uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
      #   with:
      #     name: keystone-cms
      #     path: /tmp/keystone-cms

      - name: Upload portal-client cache dir
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        with:
          name: portal-client
          path: /tmp/portal-client

      # - name: ls cache dirs
      #   run: |
      #     ls -l /tmp/keystone-cms
      #     ls -l /tmp/portal-client
      #     cat /tmp/keystone-cms/index.json | jq
      #     cat /tmp/portal-client/index.json | jq
      - name: ls cache dirs
        run: |
          ls -l /tmp/portal-client
          cat /tmp/portal-client/index.json | jq
  # run e2e tests on each browser, using build artifacts from the build job
  run-e2e-tests:
    strategy:
      matrix:
        browser: ["chromium", "firefox", "chrome", "msedge"]
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Clone E2E tests repo # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
        with:
          repository: USSF-ORBIT/ussf-portal
          path: ./e2e-tests
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout E2E ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./e2e-tests
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      - name: Clone portal client  # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
        with:
          repository: USSF-ORBIT/ussf-portal-client
          path: ./ussf-portal-client
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout portal client ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./ussf-portal-client
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      - name: Clone cms  # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
        with:
          repository: USSF-ORBIT/ussf-portal-cms
          path: ./ussf-portal-cms
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout cms ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./ussf-portal-cms
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      # - name: Read Node.js version from package.json
      #   run: echo "nodeVersion=$(node -p "require('./e2e-tests/e2e/package.json').engines.node")" >> $GITHUB_OUTPUT
      #   id: engines

      # - name: Set up node
      #   uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
      #   with:
      #     node-version: ${{ steps.engines.outputs.nodeVersion }}

      - uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2
        id: buildx
        with:
          install: true

      # - name: Download keystone-cms cache dir
      #   uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
      #   with:
      #     name: keystone-cms
      #     path: /tmp/keystone-cms

      - name: Download artifact
        uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2
        with:
          github_token: ${{secrets.ACTION_DOWNLOAD_ARTIFACT_GITHUB_TOKEN}}
          workflow: cache-to-ecr.yml
          workflow_conclusion: success
          branch: sc-1947/build-docker-once-and-share-with-jobs
          name: keystone-cms
          path: /tmp/keystone-cms
          repo: USSF-ORBIT/ussf-portal-cms
          if_no_artifact_found: warn

      - name: Download portal-client cache dir
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        with:
          name: portal-client
          path: /tmp/portal-client

      - name: ls cache dirs
        run: |
          ls -l /tmp/keystone-cms
          ls -l /tmp/portal-client
          cat /tmp/keystone-cms/index.json | jq
          cat /tmp/portal-client/index.json | jq

      # - name: Load images
      #   run: |
      #     docker load --input /tmp/keystone-cms-e2e.tar
      #     docker load --input /tmp/portal-client-e2e.tar
      #     docker image ls -a

      # - name: test caching
      #   run: touch ./ussf-portal-cms/test-file.txt

      - name: Docker compose
        run: docker compose up -d
        working-directory: ./e2e-tests/e2e

      - name: Set up node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version-file: ./e2e-tests/e2e/.node-version
          cache: yarn
          cache-dependency-path: ./e2e-tests/e2e/yarn.lock

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./e2e-tests/e2e
        
      - name: Install Playwright
        run: npx playwright install --with-deps
        working-directory: ./e2e-tests/e2e

      - name: Wait for CMS & Client sysinfo to return 200
        run: yarn wait-on --timeout 60000 http://localhost:3001/api/sysinfo http://localhost:3000/api/sysinfo
        working-directory: ./e2e-tests/e2e

      - name: Run Playwright tests on ${{ matrix.browser }} browser
        run: yarn e2e:${{ matrix.browser }} --forbid-only
        working-directory: ./e2e-tests/e2e

      - name: Upload Playwright test results
        if: always()
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        with:
          name: playwright-results
          path: ./e2e-tests/e2e/test-results

      - name: Docker logs
        uses: jwalton/gh-docker-logs@59c9656cd3cb7542525f3dce7ae2f44c0ff85d66 # v2.2.1
        if: ${{ always() }}
        with:
          dest: "./docker-logs"

      - name: Upload logs
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        if: always()
        with:
          name: container-logs
          path: ./docker-logs
