name: Build & run E2E tests

on:
  # make the workflow reusable
  workflow_call:
permissions:
  id-token: write
  contents: read
jobs:
  # builds docker images once and saves them as artifacts for parallel e2e job to use
  get-build-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Download portal-client image manifest
        uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2
        with:
          github_token: ${{secrets.ACTION_DOWNLOAD_ARTIFACT_GITHUB_TOKEN}}
          workflow: build-docker-cache-artifacts.yml
          workflow_conclusion: success
          branch: main
          name: portal-client-index
          path: /tmp/portal-manifest
          repo: USSF-ORBIT/ussf-portal-client
          if_no_artifact_found: warn

      - name: Get docker image digest from portal-client manifest
        id: portal_manifest
        run: |
          digest=$(cat /tmp/portal-manifest/index.json | jq -r '.manifests[0].digest')
          echo "portal_client_docker_tag=${digest##sha256:}" >> $GITHUB_OUTPUT

      - name: Lookup if portal-client image build cache is available
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        id: restore-client-cache
        with:
          path: /tmp/portal-client
          key: ${{ runner.os }}-docker-portal-client-${{ steps.portal_manifest.outputs.portal_client_docker_tag }}
          lookup-only: true

      - name: If portal-client build cache not found locally, download portal-client build cache
        uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2
        if: steps.restore-client-cache.outputs.cache-hit != 'true'
        with:
          github_token: ${{secrets.ACTION_DOWNLOAD_ARTIFACT_GITHUB_TOKEN}}
          workflow: build-docker-cache-artifacts.yml
          workflow_conclusion: success
          branch: main
          name: portal-client
          path: /tmp/portal-client
          repo: USSF-ORBIT/ussf-portal-client
          if_no_artifact_found: warn

      - name: If portal-client build cache not found locally, save it to this repo's GHA cache
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        if: steps.restore-client-cache.outputs.cache-hit != 'true'
        with:
          path: /tmp/portal-client
          key: ${{ runner.os }}-docker-portal-client-${{ steps.portal_manifest.outputs.portal_client_docker_tag }}

      - name: Download keystone-cms image manifest
        uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2
        with:
          github_token: ${{secrets.ACTION_DOWNLOAD_ARTIFACT_GITHUB_TOKEN}}
          workflow: build-docker-cache-artifacts.yml
          workflow_conclusion: success
          branch: main
          name: keystone-cms-index
          path: /tmp/keystone-manifest
          repo: USSF-ORBIT/ussf-portal-cms
          if_no_artifact_found: warn

      - name: Get docker image digest from keystone-cms manifest
        id: keystone_manifest
        run: |
          digest=$(cat /tmp/keystone-manifest/index.json | jq -r '.manifests[0].digest')
          echo "keystone_cms_docker_tag=${digest##sha256:}" >> $GITHUB_OUTPUT

      - name: Lookup if keystone-cms image build cache is available
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        id: restore-keystone-cache
        with:
          path: /tmp/keystone-cms
          key: ${{ runner.os }}-docker-keystone-cms-${{ steps.keystone_manifest.outputs.keystone_cms_docker_tag }}
          lookup-only: true

      - name: If keystone-cms build cache not found locally, download keystone-cms build cache
        uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2
        if: steps.restore-keystone-cache.outputs.cache-hit != 'true'
        with:
          github_token: ${{secrets.ACTION_DOWNLOAD_ARTIFACT_GITHUB_TOKEN}}
          workflow: build-docker-cache-artifacts.yml
          workflow_conclusion: success
          branch: main
          name: keystone-cms
          path: /tmp/keystone-cms
          repo: USSF-ORBIT/ussf-portal-cms
          if_no_artifact_found: warn

      - name: If keystone-cms build cache not found locally, save keystone-cms build cache to this repo's GHA cache
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        if: steps.restore-keystone-cache.outputs.cache-hit != 'true'
        with:
          path: /tmp/keystone-cms
          key: ${{ runner.os }}-docker-keystone-cms-${{ steps.keystone_manifest.outputs.keystone_cms_docker_tag }}
      # TODO: renable once personnel api builds its cache
      # - name: Download personnel-api image manifest
      #   uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2
      #   with:
      #     github_token: ${{secrets.ACTION_DOWNLOAD_ARTIFACT_GITHUB_TOKEN}}
      #     workflow: build-docker-cache-artifacts.yml
      #     workflow_conclusion: success
      #     branch: main
      #     name: personnel-api-index
      #     path: /tmp/portal-manifest
      #     repo: USSF-ORBIT/ussf-personnel-api
      #     if_no_artifact_found: warn
      #
      # - name: Get docker image digest from personnel-api manifest
      #   id: personnel_manifest
      #   run: |
      #     digest=$(cat /tmp/portal-manifest/index.json | jq -r '.manifests[0].digest')
      #     echo "personnel_api_docker_tag=${digest##sha256:}" >> $GITHUB_OUTPUT
      #
      # - name: Lookup if personnel-api image build cache is available
      #   uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
      #   id: restore-personnel-cache
      #   with:
      #     path: /tmp/personnel-api
      #     key: ${{ runner.os }}-docker-personnel-api-${{ steps.personnel_manifest.outputs.personnel_api_docker_tag }}
      #     lookup-only: true
      #
      # - name: If personnel-api build cache not found locally, download personnel-api build cache
      #   uses: dawidd6/action-download-artifact@246dbf436b23d7c49e21a7ab8204ca9ecd1fe615 # v2
      #   if: steps.restore-personnel-cache.outputs.cache-hit != 'true'
      #   with:
      #     github_token: ${{secrets.ACTION_DOWNLOAD_ARTIFACT_GITHUB_TOKEN}}
      #     workflow: build-docker-cache-artifacts.yml
      #     workflow_conclusion: success
      #     branch: main
      #     name: personnel-api
      #     path: /tmp/personnel-api
      #     repo: USSF-ORBIT/ussf-personnel-api
      #     if_no_artifact_found: warn
      #
      # - name: If personnel-api build cache not found locally, save it to this repo's GHA cache
      #   uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
      #   if: steps.restore-personnel-cache.outputs.cache-hit != 'true'
      #   with:
      #     path: /tmp/personnel-api
      #     key: ${{ runner.os }}-docker-personnel-api-${{ steps.personnel_manifest.outputs.personnel_api_docker_tag }}
    outputs:
      keystone-cms-docker-tag: ${{ steps.keystone_manifest.outputs.keystone_cms_docker_tag }}
      portal-client-docker-tag: ${{ steps.portal_manifest.outputs.portal_client_docker_tag }}
      # personnel-api-docker-tag: ${{ steps.personnel_manifest.outputs.personnel_api_docker_tag }}

  # run e2e tests on each browser, using build artifacts from the build job
  run-e2e-tests:
    strategy:
      matrix:
        browser: [ "chromium", "chrome", "msedge" ]
    runs-on: ubuntu-latest
    needs: get-build-cache
    steps:
      - name: Clone E2E tests repo # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          repository: USSF-ORBIT/ussf-portal
          path: ./e2e-tests
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout E2E ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./e2e-tests
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      - name: Clone portal client # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          repository: USSF-ORBIT/ussf-portal-client
          path: ./ussf-portal-client
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout portal client ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./ussf-portal-client
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      - name: Clone cms # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          repository: USSF-ORBIT/ussf-portal-cms
          path: ./ussf-portal-cms
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout cms ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./ussf-portal-cms
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      - name: Clone personnel api # defaults to checking out the reference or SHA for the event that triggered this workflow. Otherwise, uses the default branch.
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          repository: USSF-ORBIT/ussf-personnel-api
          path: ./ussf-personnel-api
          fetch-depth: 0 # fetch all branch information, needed to checkout the branch if present later

      - name: Checkout personnel api ${{github.head_ref}} or main
        if: (github.event_name == 'push' || github.event_name == 'pull_request') && !startsWith(github.head_ref, 'renovate')
        working-directory: ./ussf-personnel-api
        run: |
          # checkout the branch that started this pull request or stay on main if no such branch
          /usr/bin/git checkout --progress --force -B ${{github.head_ref}} origin/${{github.head_ref}} || echo "staying on main"

      - name: Read Node.js version from package.json
        run: echo "nodeVersion=$(node -p "require('./e2e-tests/e2e/package.json').engines.node")" >> $GITHUB_OUTPUT
        id: engines

      - name: Set up node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ steps.engines.outputs.nodeVersion }}

      - uses: docker/setup-buildx-action@ecf95283f03858871ff00b787d79c419715afc34 # v2
        id: buildx
        with:
          install: true

      - name: Restore portal-client Docker build cache
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        id: restore-client-cache
        with:
          path: /tmp/portal-client
          key: ${{ runner.os }}-docker-portal-client-${{ needs.get-build-cache.outputs.portal-client-docker-tag }}

      - name: Restore keystone-cms Docker build cache
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        id: restore-keystone-cache
        with:
          path: /tmp/keystone-cms
          key: ${{ runner.os }}-docker-keystone-cms-${{ needs.get-build-cache.outputs.keystone-cms-docker-tag }}

      - name: Restore personnel-api Docker build cache
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3
        id: restore-personnel-cache
        with:
          path: /tmp/personnel-api
          key: ${{ runner.os }}-docker-personnel-api-${{ needs.get-build-cache.outputs.personnel_api_docker_tag }}

      - name: Docker compose
        run: |
          docker image prune --all --force
          docker compose up -d
          docker builder prune --all --force
        working-directory: ./e2e-tests/e2e

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./e2e-tests/e2e

      - name: Wait for CMS & Client sysinfo to return 200
        run: yarn wait-on --timeout 60000 http://localhost:3001/api/sysinfo http://localhost:3000/api/sysinfo
        working-directory: ./e2e-tests/e2e

      - name: Install Playwright
        run: npx playwright install --with-deps
        working-directory: ./e2e-tests/e2e

      - name: Run Playwright tests on ${{ matrix.browser }} browser
        run: yarn e2e:${{ matrix.browser }} --forbid-only
        working-directory: ./e2e-tests/e2e

      - name: Upload Playwright test results
        if: always()
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        with:
          name: playwright-results
          path: ./e2e-tests/e2e/test-results

      - name: Docker logs
        uses: jwalton/gh-docker-logs@59c9656cd3cb7542525f3dce7ae2f44c0ff85d66 # v2.2.1
        if: ${{ always() }}
        with:
          dest: "./docker-logs"

      - name: Upload logs
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        if: always()
        with:
          name: container-logs
          path: ./docker-logs
